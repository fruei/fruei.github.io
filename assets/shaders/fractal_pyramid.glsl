{
  "sksl": "// This SkSL shader is autogenerated by spirv-cross.\n\nfloat4 flutter_FragCoord;\n\nuniform float iTime;\nuniform vec2 iResolution;\n\nvec4 fragColor;\n\nvec2 FLT_flutter_local_rotate(vec2 p, float a)\n{\n    float c = cos(a);\n    float s = sin(a);\n    return p * mat2(vec2(c, s), vec2(-s, c));\n}\n\nfloat FLT_flutter_local_map(inout vec3 p)\n{\n    for (int i = 0; i < 8; i++)\n    {\n        float t = iTime * 0.20000000298023223876953125;\n        vec2 param = p.xz;\n        float param_1 = t;\n        vec2 _90 = FLT_flutter_local_rotate(param, param_1);\n        p.x = _90.x;\n        p.z = _90.y;\n        vec2 param_2 = p.xy;\n        float param_3 = t * 1.88999998569488525390625;\n        vec2 _105 = FLT_flutter_local_rotate(param_2, param_3);\n        p.x = _105.x;\n        p.y = _105.y;\n        vec3 _111 = p;\n        vec2 _113 = abs(_111.xz);\n        p.x = _113.x;\n        p.z = _113.y;\n        vec3 _119 = p;\n        vec2 _122 = _119.xz - vec2(0.5);\n        p.x = _122.x;\n        p.z = _122.y;\n    }\n    return dot(sign(p), p) / 5.0;\n}\n\nvec3 FLT_flutter_local_palette(float d)\n{\n    return mix(vec3(0.20000000298023223876953125, 0.699999988079071044921875, 0.89999997615814208984375), vec3(1.0, 0.0, 1.0), vec3(d));\n}\n\nvec4 FLT_flutter_local_rm(vec3 ro, vec3 rd)\n{\n    float t = 0.0;\n    vec3 col = vec3(0.0);\n    float d;\n    for (float i = 0.0; i < 64.0; i += 1.0)\n    {\n        vec3 p = ro + (rd * t);\n        vec3 param = p;\n        float _159 = FLT_flutter_local_map(param);\n        d = _159 * 0.5;\n        if (d < 0.0199999995529651641845703125)\n        {\n            break;\n        }\n        if (d > 100.0)\n        {\n            break;\n        }\n        float param_1 = length(p) * 0.100000001490116119384765625;\n        col += (FLT_flutter_local_palette(param_1) / vec3(400.0 * d));\n        t += d;\n    }\n    return vec4(col, 1.0 / (d * 100.0));\n}\n\nvec4 FLT_flutter_local_mainImage(vec2 fragCoord)\n{\n    vec2 uv = (fragCoord - (iResolution / vec2(2.0))) / vec2(iResolution.x);\n    vec3 ro = vec3(0.0, 0.0, -50.0);\n    vec2 param = ro.xz;\n    float param_1 = iTime;\n    vec2 _222 = FLT_flutter_local_rotate(param, param_1);\n    ro.x = _222.x;\n    ro.z = _222.y;\n    vec3 cf = normalize(-ro);\n    vec3 cs = normalize(cross(cf, vec3(0.0, 1.0, 0.0)));\n    vec3 cu = normalize(cross(cf, cs));\n    vec3 uuv = ((ro + (cf * 3.0)) + (cs * uv.x)) + (cu * uv.y);\n    vec3 rd = normalize(uuv - ro);\n    vec3 param_2 = ro;\n    vec3 param_3 = rd;\n    vec4 col = FLT_flutter_local_rm(param_2, param_3);\n    return col;\n}\n\nvoid FLT_main()\n{\n    vec2 pos = flutter_FragCoord.xy;\n    vec2 param_4 = pos;\n    fragColor = FLT_flutter_local_mainImage(param_4);\n}\n\nhalf4 main(float2 iFragCoord)\n{\n      flutter_FragCoord = float4(iFragCoord, 0, 0);\n      FLT_main();\n      return fragColor;\n}\n",
  "stage": 1,
  "target_platform": 2,
  "uniforms": [
    {
      "array_elements": 0,
      "bit_width": 32,
      "columns": 1,
      "location": 0,
      "name": "iTime",
      "rows": 1,
      "type": 10
    },
    {
      "array_elements": 0,
      "bit_width": 32,
      "columns": 1,
      "location": 1,
      "name": "iResolution",
      "rows": 2,
      "type": 10
    }
  ]
}